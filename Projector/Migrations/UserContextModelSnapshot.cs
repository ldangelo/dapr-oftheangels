// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Projector.Repository;

namespace Projector.Migrations
{
    [DbContext(typeof(UserContext))]
    partial class UserContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Domain.dao.Address", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("Userid")
                        .HasColumnType("uuid");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("line1")
                        .HasColumnType("text");

                    b.Property<string>("line2")
                        .HasColumnType("text");

                    b.Property<string>("postalCode")
                        .HasColumnType("text");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.Property<int>("type")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Userid");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Domain.dao.Email", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("Userid")
                        .HasColumnType("uuid");

                    b.Property<string>("address")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("Userid");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("Domain.dao.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<string>("userName")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.dao.Address", b =>
                {
                    b.HasOne("Domain.dao.User", null)
                        .WithMany("addresses")
                        .HasForeignKey("Userid");
                });

            modelBuilder.Entity("Domain.dao.Email", b =>
                {
                    b.HasOne("Domain.dao.User", null)
                        .WithMany("emails")
                        .HasForeignKey("Userid");
                });

            modelBuilder.Entity("Domain.dao.User", b =>
                {
                    b.Navigation("addresses");

                    b.Navigation("emails");
                });
#pragma warning restore 612, 618
        }
    }
}
